{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Documents/kanbananza/src/components/MoveCardToList.js\";\nimport React from 'react';\n\nconst MoveCardToList = ({\n  lists,\n  card,\n  moveCardToList\n}) => {\n  const handleChange = event => {\n    //const userId = event.target.value;\n    const newListId = event.target.value; //const { card } = this.props;\n    // this.props.onListChange(card, newListId);\n\n    if (moveCardToList) moveCardToList(card, newListId);\n  };\n\n  return React.createElement(\"select\", {\n    className: \"Card-move\",\n    onChange: handleChange,\n    value: listId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, lists.map(list => React.createElement(\"option\", {\n    value: list.id,\n    key: list.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, list.title)));\n};\n\nexport default MoveCardToList;","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/components/MoveCardToList.js"],"names":["React","MoveCardToList","lists","card","moveCardToList","handleChange","event","newListId","target","value","listId","map","list","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAAqC;AAC1D,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B,CAF4B,CAG5B;AACA;;AACA,QAAIL,cAAJ,EAAoBA,cAAc,CAACD,IAAD,EAAOI,SAAP,CAAd;AACrB,GAND;;AAOA,SACE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,QAAQ,EAAEF,YAAxC;AAAsD,IAAA,KAAK,EAAEK,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,GAAN,CAAUC,IAAI,IACb;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,GAAG,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,KADR,CADD,CADH,CADF;AASD,CAjBD;;AAmBA,eAAeb,cAAf","sourcesContent":["import React from 'react';\n\nconst MoveCardToList = ({ lists, card, moveCardToList }) => {\n  const handleChange = event => {\n    //const userId = event.target.value;\n    const newListId = event.target.value;\n    //const { card } = this.props;\n    // this.props.onListChange(card, newListId);\n    if (moveCardToList) moveCardToList(card, newListId);\n  };\n  return (\n    <select className=\"Card-move\" onChange={handleChange} value={listId}>\n      {lists.map(list => (\n        <option value={list.id} key={list.id}>\n          {list.title}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default MoveCardToList;\n"]},"metadata":{},"sourceType":"module"}
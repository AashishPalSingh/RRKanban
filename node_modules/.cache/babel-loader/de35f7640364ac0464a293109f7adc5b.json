{"ast":null,"code":"import _objectSpread from \"/Users/ashish/Documents/kanbananza/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { lists as defaultLists } from '../normalized-state';\nimport set from 'lodash/fp/set';\n\nconst listsReducer = (lists = defaultLists, action) => {\n  console.log(lists, action);\n\n  if (action.type === 'CARD_CREATE') {\n    const _action$payload = action.payload,\n          cardId = _action$payload.cardId,\n          listId = _action$payload.listId;\n    const cards = lists.entities[listId].cards.concat(cardId);\n    return set(['entities', listId, 'cards'], cards, lists);\n  }\n\n  if (action.type === 'MOVE_CARD_LIST') {\n    const _action$payload2 = action.payload,\n          card = _action$payload2.card,\n          newListId = _action$payload2.newListId,\n          oldListId = _action$payload2.oldListId;\n    console.log('new lsit id', newListId);\n    debugger;\n    let cards = lists.entities[newListId].cards.concat(card.id);\n    let newList = set(['entities', newListId, 'cards'], cards, lists); //cards = lists.entities[oldListId].cards.pop(card.id);\n\n    console.log(newList);\n    return newList;\n    /* lists.entities[newListId].cards = [\n      ...lists.entities[newListId].cards,\n      card.id,\n    ];\n    return {\n      entities: { ...lists.entities },\n      ids: [...lists.ids],\n    }; */\n  }\n\n  if (action.type === 'LIST_CREATE') {\n    const _action$payload3 = action.payload,\n          list = _action$payload3.list,\n          listId = _action$payload3.listId;\n    return {\n      entities: _objectSpread({}, lists.entities, {\n        [listId]: list\n      }),\n      ids: [...lists.ids, listId]\n    };\n  }\n\n  return lists;\n};\n\nexport default listsReducer;","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/reducers/list-reducer.js"],"names":["lists","defaultLists","set","listsReducer","action","console","log","type","payload","cardId","listId","cards","entities","concat","card","newListId","oldListId","id","newList","list","ids"],"mappings":";AAAA,SAASA,KAAK,IAAIC,YAAlB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,YAAY,GAAG,CAACH,KAAK,GAAGC,YAAT,EAAuBG,MAAvB,KAAkC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmBI,MAAnB;;AACA,MAAIA,MAAM,CAACG,IAAP,KAAgB,aAApB,EAAmC;AAAA,4BACNH,MAAM,CAACI,OADD;AAAA,UACzBC,MADyB,mBACzBA,MADyB;AAAA,UACjBC,MADiB,mBACjBA,MADiB;AAEjC,UAAMC,KAAK,GAAGX,KAAK,CAACY,QAAN,CAAeF,MAAf,EAAuBC,KAAvB,CAA6BE,MAA7B,CAAoCJ,MAApC,CAAd;AACA,WAAOP,GAAG,CAAC,CAAC,UAAD,EAAaQ,MAAb,EAAqB,OAArB,CAAD,EAAgCC,KAAhC,EAAuCX,KAAvC,CAAV;AACD;;AACD,MAAII,MAAM,CAACG,IAAP,KAAgB,gBAApB,EAAsC;AAAA,6BACGH,MAAM,CAACI,OADV;AAAA,UAC5BM,IAD4B,oBAC5BA,IAD4B;AAAA,UACtBC,SADsB,oBACtBA,SADsB;AAAA,UACXC,SADW,oBACXA,SADW;AAEpCX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,SAA3B;AACA;AACA,QAAIJ,KAAK,GAAGX,KAAK,CAACY,QAAN,CAAeG,SAAf,EAA0BJ,KAA1B,CAAgCE,MAAhC,CAAuCC,IAAI,CAACG,EAA5C,CAAZ;AACA,QAAIC,OAAO,GAAGhB,GAAG,CAAC,CAAC,UAAD,EAAaa,SAAb,EAAwB,OAAxB,CAAD,EAAmCJ,KAAnC,EAA0CX,KAA1C,CAAjB,CALoC,CAMpC;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACA,WAAOA,OAAP;AACA;;;;;;;;AAQD;;AACD,MAAId,MAAM,CAACG,IAAP,KAAgB,aAApB,EAAmC;AAAA,6BACRH,MAAM,CAACI,OADC;AAAA,UACzBW,IADyB,oBACzBA,IADyB;AAAA,UACnBT,MADmB,oBACnBA,MADmB;AAEjC,WAAO;AACLE,MAAAA,QAAQ,oBAAOZ,KAAK,CAACY,QAAb;AAAuB,SAACF,MAAD,GAAUS;AAAjC,QADH;AAELC,MAAAA,GAAG,EAAE,CAAC,GAAGpB,KAAK,CAACoB,GAAV,EAAeV,MAAf;AAFA,KAAP;AAID;;AACD,SAAOV,KAAP;AACD,CAjCD;;AAmCA,eAAeG,YAAf","sourcesContent":["import { lists as defaultLists } from '../normalized-state';\nimport set from 'lodash/fp/set';\n\nconst listsReducer = (lists = defaultLists, action) => {\n  console.log(lists, action);\n  if (action.type === 'CARD_CREATE') {\n    const { cardId, listId } = action.payload;\n    const cards = lists.entities[listId].cards.concat(cardId);\n    return set(['entities', listId, 'cards'], cards, lists);\n  }\n  if (action.type === 'MOVE_CARD_LIST') {\n    const { card, newListId, oldListId } = action.payload;\n    console.log('new lsit id', newListId);\n    debugger;\n    let cards = lists.entities[newListId].cards.concat(card.id);\n    let newList = set(['entities', newListId, 'cards'], cards, lists);\n    //cards = lists.entities[oldListId].cards.pop(card.id);\n    console.log(newList);\n    return newList;\n    /* lists.entities[newListId].cards = [\n      ...lists.entities[newListId].cards,\n      card.id,\n    ];\n    return {\n      entities: { ...lists.entities },\n      ids: [...lists.ids],\n    }; */\n  }\n  if (action.type === 'LIST_CREATE') {\n    const { list, listId } = action.payload;\n    return {\n      entities: { ...lists.entities, [listId]: list },\n      ids: [...lists.ids, listId],\n    };\n  }\n  return lists;\n};\n\nexport default listsReducer;\n"]},"metadata":{},"sourceType":"module"}
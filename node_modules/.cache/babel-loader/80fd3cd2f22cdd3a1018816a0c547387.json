{"ast":null,"code":"import _objectSpread from \"/Users/ashish/Documents/kanbananza/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { backlog as defaultBacklog } from '../normalized-state';\n\nconst backlogReducer = (backlog = defaultBacklog, action) => {\n  console.log(backlog, action);\n\n  if (action.type === 'REMOVE_CARD') {\n    const _action$payload = action.payload,\n          listId = _action$payload.listId,\n          card = _action$payload.card;\n    const cardId = card.id;\n    const newCardObj = {\n      cardId: {}\n    };\n\n    const newCards = _objectSpread({}, backlog.cards, {\n      [cardId]: card\n    });\n\n    const cardIds = [...backlog.cardIds, card.id];\n    const list = {\n      cards: [...backlog.list.cards, card],\n      id: backlog.list.id,\n      title: backlog.list.title\n    };\n\n    if (action.type === 'ADD_CARD') {\n      const _action$payload2 = action.payload,\n            card = _action$payload2.card,\n            listId = _action$payload2.listId;\n      let cards = lists.entities[listId].cards.filter(cardId => cardId !== card.id);\n      lists = set(['entities', listId, 'cards'], cards, lists);\n      console.log(lists);\n      return lists;\n    }\n\n    return {\n      cards: newCards,\n      cardIds: cardIds,\n      list: list\n    };\n  }\n\n  return backlog;\n};\n\nexport default backlogReducer;","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/reducers/backlog-reducer.js"],"names":["backlog","defaultBacklog","backlogReducer","action","console","log","type","payload","listId","card","cardId","id","newCardObj","newCards","cards","cardIds","list","title","lists","entities","filter","set"],"mappings":";AAAA,SAASA,OAAO,IAAIC,cAApB,QAA0C,qBAA1C;;AAEA,MAAMC,cAAc,GAAG,CAACF,OAAO,GAAGC,cAAX,EAA2BE,MAA3B,KAAsC;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAqBG,MAArB;;AACA,MAAIA,MAAM,CAACG,IAAP,KAAgB,aAApB,EAAmC;AAAA,4BACRH,MAAM,CAACI,OADC;AAAA,UACzBC,MADyB,mBACzBA,MADyB;AAAA,UACjBC,IADiB,mBACjBA,IADiB;AAEjC,UAAMC,MAAM,GAAGD,IAAI,CAACE,EAApB;AACA,UAAMC,UAAU,GAAG;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAnB;;AACA,UAAMG,QAAQ,qBAAQb,OAAO,CAACc,KAAhB;AAAuB,OAACJ,MAAD,GAAUD;AAAjC,MAAd;;AACA,UAAMM,OAAO,GAAG,CAAC,GAAGf,OAAO,CAACe,OAAZ,EAAqBN,IAAI,CAACE,EAA1B,CAAhB;AACA,UAAMK,IAAI,GAAG;AACXF,MAAAA,KAAK,EAAE,CAAC,GAAGd,OAAO,CAACgB,IAAR,CAAaF,KAAjB,EAAwBL,IAAxB,CADI;AAEXE,MAAAA,EAAE,EAAEX,OAAO,CAACgB,IAAR,CAAaL,EAFN;AAGXM,MAAAA,KAAK,EAAEjB,OAAO,CAACgB,IAAR,CAAaC;AAHT,KAAb;;AAKA,QAAId,MAAM,CAACG,IAAP,KAAgB,UAApB,EAAgC;AAAA,+BACLH,MAAM,CAACI,OADF;AAAA,YACtBE,IADsB,oBACtBA,IADsB;AAAA,YAChBD,MADgB,oBAChBA,MADgB;AAE9B,UAAIM,KAAK,GAAGI,KAAK,CAACC,QAAN,CAAeX,MAAf,EAAuBM,KAAvB,CAA6BM,MAA7B,CACVV,MAAM,IAAIA,MAAM,KAAKD,IAAI,CAACE,EADhB,CAAZ;AAGAO,MAAAA,KAAK,GAAGG,GAAG,CAAC,CAAC,UAAD,EAAab,MAAb,EAAqB,OAArB,CAAD,EAAgCM,KAAhC,EAAuCI,KAAvC,CAAX;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,aAAOA,KAAP;AACD;;AACD,WAAO;AACLJ,MAAAA,KAAK,EAAED,QADF;AAELE,MAAAA,OAAO,EAAEA,OAFJ;AAGLC,MAAAA,IAAI,EAAEA;AAHD,KAAP;AAKD;;AACD,SAAOhB,OAAP;AACD,CA7BD;;AA+BA,eAAeE,cAAf","sourcesContent":["import { backlog as defaultBacklog } from '../normalized-state';\n\nconst backlogReducer = (backlog = defaultBacklog, action) => {\n  console.log(backlog, action);\n  if (action.type === 'REMOVE_CARD') {\n    const { listId, card } = action.payload;\n    const cardId = card.id;\n    const newCardObj = { cardId: {} };\n    const newCards = { ...backlog.cards, [cardId]: card };\n    const cardIds = [...backlog.cardIds, card.id];\n    const list = {\n      cards: [...backlog.list.cards, card],\n      id: backlog.list.id,\n      title: backlog.list.title,\n    };\n    if (action.type === 'ADD_CARD') {\n      const { card, listId } = action.payload;\n      let cards = lists.entities[listId].cards.filter(\n        cardId => cardId !== card.id,\n      );\n      lists = set(['entities', listId, 'cards'], cards, lists);\n      console.log(lists);\n      return lists;\n    }\n    return {\n      cards: newCards,\n      cardIds: cardIds,\n      list: list,\n    };\n  }\n  return backlog;\n};\n\nexport default backlogReducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { connect } from 'react-redux';\nimport { denormalize, schema, normalize } from 'normalizr';\nimport CardAssignment from '../components/CardAssignment';\n\nconst mapStateToProps = (state, ownProps) => {\n  const user = new schema.Entity('users');\n  const mySchema = {\n    users: [user]\n  };\n  const denormalizedUsers = denormalize({\n    users: state.users.ids\n  }, mySchema, {\n    users: state.users.entities\n  });\n  debugger;\n  const card = new schema.Entity('cards');\n  const normalizedBacklogCards = normalize(state.backlog.list.cards, [card]);\n  const userId = state.cards.entities[ownProps.cardId].assignedTo || normalizedBacklogCards.entities.cards[ownProps.cardId].assignedTo;\n  return {\n    user: state.users.entities[userId],\n    card: state.cards.entities[ownProps.cardId],\n    users: denormalizedUsers.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    assignCardToUser(cardId, userId) {\n      dispatch({\n        type: 'MOVE_CARD',\n        payload: {\n          userId,\n          cardId\n        }\n      });\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAssignment);","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/containers/CardAssignmentContainer.js"],"names":["connect","denormalize","schema","normalize","CardAssignment","mapStateToProps","state","ownProps","user","Entity","mySchema","users","denormalizedUsers","ids","entities","card","normalizedBacklogCards","backlog","list","cards","userId","cardId","assignedTo","mapDispatchToProps","dispatch","assignCardToUser","type","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,WAA/C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,IAAI,GAAG,IAAIN,MAAM,CAACO,MAAX,CAAkB,OAAlB,CAAb;AACA,QAAMC,QAAQ,GAAG;AAAEC,IAAAA,KAAK,EAAE,CAACH,IAAD;AAAT,GAAjB;AACA,QAAMI,iBAAiB,GAAGX,WAAW,CAAC;AAAEU,IAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYE;AAArB,GAAD,EAA6BH,QAA7B,EAAuC;AAC1EC,IAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYG;AADuD,GAAvC,CAArC;AAGA;AACA,QAAMC,IAAI,GAAG,IAAIb,MAAM,CAACO,MAAX,CAAkB,OAAlB,CAAb;AACA,QAAMO,sBAAsB,GAAGb,SAAS,CAACG,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC,KAApB,EAA2B,CAACJ,IAAD,CAA3B,CAAxC;AACA,QAAMK,MAAM,GACVd,KAAK,CAACa,KAAN,CAAYL,QAAZ,CAAqBP,QAAQ,CAACc,MAA9B,EAAsCC,UAAtC,IACAN,sBAAsB,CAACF,QAAvB,CAAgCK,KAAhC,CAAsCZ,QAAQ,CAACc,MAA/C,EAAuDC,UAFzD;AAGA,SAAO;AACLd,IAAAA,IAAI,EAAEF,KAAK,CAACK,KAAN,CAAYG,QAAZ,CAAqBM,MAArB,CADD;AAELL,IAAAA,IAAI,EAAET,KAAK,CAACa,KAAN,CAAYL,QAAZ,CAAqBP,QAAQ,CAACc,MAA9B,CAFD;AAGLV,IAAAA,KAAK,EAAEC,iBAAiB,CAACD;AAHpB,GAAP;AAKD,CAjBD;;AAkBA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,gBAAgB,CAACJ,MAAD,EAASD,MAAT,EAAiB;AAC/BI,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAE;AAAEP,UAAAA,MAAF;AAAUC,UAAAA;AAAV;AAFF,OAAD,CAAR;AAID;;AANI,GAAP;AAQD,CATD;;AAWA,eAAerB,OAAO,CACpBK,eADoB,EAEpBkB,kBAFoB,CAAP,CAGbnB,cAHa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { denormalize, schema, normalize } from 'normalizr';\nimport CardAssignment from '../components/CardAssignment';\n\nconst mapStateToProps = (state, ownProps) => {\n  const user = new schema.Entity('users');\n  const mySchema = { users: [user] };\n  const denormalizedUsers = denormalize({ users: state.users.ids }, mySchema, {\n    users: state.users.entities,\n  });\n  debugger;\n  const card = new schema.Entity('cards');\n  const normalizedBacklogCards = normalize(state.backlog.list.cards, [card]);\n  const userId =\n    state.cards.entities[ownProps.cardId].assignedTo ||\n    normalizedBacklogCards.entities.cards[ownProps.cardId].assignedTo;\n  return {\n    user: state.users.entities[userId],\n    card: state.cards.entities[ownProps.cardId],\n    users: denormalizedUsers.users,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    assignCardToUser(cardId, userId) {\n      dispatch({\n        type: 'MOVE_CARD',\n        payload: { userId, cardId },\n      });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CardAssignment);\n"]},"metadata":{},"sourceType":"module"}
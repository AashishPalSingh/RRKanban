{"ast":null,"code":"import { backlogList as defaultBacklogList } from '../normalized-state';\nimport set from 'lodash/fp/set';\n\nconst backlogReducer = (backlogList = defaultBacklogList, action) => {\n  /* if (action.type === 'CARD_CREATE') {\n    const { cardId, listId } = action.payload;\n    const cards = lists.entities[listId].cards.concat(cardId);\n    return set(['entities', listId, 'cards'], cards, lists);\n  }\n  if (action.type === 'MOVE_CARD_LIST') {\n    const { card, newListId, oldListId } = action.payload;\n    console.log('new lsit id', newListId);\n    debugger;\n    let cards = lists.entities[newListId].cards.concat(card.id);\n    let newList = set(['entities', newListId, 'cards'], cards, lists);\n    cards = lists.entities[oldListId].cards.filter(\n      cardId => cardId !== card.id,\n    );\n    newList = set(['entities', oldListId, 'cards'], cards, newList);\n    console.log(newList);\n    return newList;\n    lists.entities[newListId].cards = [\n      ...lists.entities[newListId].cards,\n      card.id,\n    ];\n    return {\n      entities: { ...lists.entities },\n      ids: [...lists.ids],\n    }; \n  }\n  if (action.type === 'LIST_CREATE') {\n    const { list, listId } = action.payload;\n    return {\n      entities: { ...lists.entities, [listId]: list },\n      ids: [...lists.ids, listId],\n    };\n  } */\n  return backlogList;\n};\n\nexport default backlogReducer;","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/reducers/backlog-reducer.js"],"names":["backlogList","defaultBacklogList","set","backlogReducer","action"],"mappings":"AAAA,SAASA,WAAW,IAAIC,kBAAxB,QAAkD,qBAAlD;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,cAAc,GAAG,CAACH,WAAW,GAAGC,kBAAf,EAAmCG,MAAnC,KAA8C;AACnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAOJ,WAAP;AACD,CAnCD;;AAqCA,eAAeG,cAAf","sourcesContent":["import { backlogList as defaultBacklogList } from '../normalized-state';\nimport set from 'lodash/fp/set';\n\nconst backlogReducer = (backlogList = defaultBacklogList, action) => {\n  /* if (action.type === 'CARD_CREATE') {\n    const { cardId, listId } = action.payload;\n    const cards = lists.entities[listId].cards.concat(cardId);\n    return set(['entities', listId, 'cards'], cards, lists);\n  }\n  if (action.type === 'MOVE_CARD_LIST') {\n    const { card, newListId, oldListId } = action.payload;\n    console.log('new lsit id', newListId);\n    debugger;\n    let cards = lists.entities[newListId].cards.concat(card.id);\n    let newList = set(['entities', newListId, 'cards'], cards, lists);\n    cards = lists.entities[oldListId].cards.filter(\n      cardId => cardId !== card.id,\n    );\n    newList = set(['entities', oldListId, 'cards'], cards, newList);\n    console.log(newList);\n    return newList;\n    lists.entities[newListId].cards = [\n      ...lists.entities[newListId].cards,\n      card.id,\n    ];\n    return {\n      entities: { ...lists.entities },\n      ids: [...lists.ids],\n    }; \n  }\n  if (action.type === 'LIST_CREATE') {\n    const { list, listId } = action.payload;\n    return {\n      entities: { ...lists.entities, [listId]: list },\n      ids: [...lists.ids, listId],\n    };\n  } */\n  return backlogList;\n};\n\nexport default backlogReducer;\n"]},"metadata":{},"sourceType":"module"}
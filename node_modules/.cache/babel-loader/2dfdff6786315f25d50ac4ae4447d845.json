{"ast":null,"code":"var _jsxFileName = \"/Users/ashish/Documents/kanbananza/src/components/CardAssignment.js\";\nimport React from 'react';\n\nconst CardAssignment = ({\n  card = {},\n  users = [],\n  user = {},\n  assignCardToUser = () => {}\n}) => {\n  const handleChange = event => {\n    const userId = event.target.value;\n    if (assignCardToUser) assignCardToUser(card.id, userId);\n  };\n\n  console.log(this.props.card);\n  console.log(this.props.users);\n  console.log(this.props.user);\n  return React.createElement(\"div\", {\n    className: \"CardAssignment\",\n    style: {\n      fontSize: '0.8em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, card.assignedTo ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Card assigned to \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, user.name), \".\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Card unassigned.\"), React.createElement(\"select\", {\n    value: card.assignedTo,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"(Unassigned)\"), users.map(user => React.createElement(\"option\", {\n    value: user.id,\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, user.name))));\n};\n\nexport default CardAssignment;","map":{"version":3,"sources":["/Users/ashish/Documents/kanbananza/src/components/CardAssignment.js"],"names":["React","CardAssignment","card","users","user","assignCardToUser","handleChange","event","userId","target","value","id","console","log","props","fontSize","assignedTo","name","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,IAAI,GAAG,EADe;AAEtBC,EAAAA,KAAK,GAAG,EAFc;AAGtBC,EAAAA,IAAI,GAAG,EAHe;AAItBC,EAAAA,gBAAgB,GAAG,MAAM,CAAE;AAJL,CAAD,KAKjB;AACJ,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AAEA,QAAIL,gBAAJ,EAAsBA,gBAAgB,CAACH,IAAI,CAACS,EAAN,EAAUH,MAAV,CAAhB;AACvB,GAJD;;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWZ,IAAvB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWX,KAAvB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWV,IAAvB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACc,UAAL,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASZ,IAAI,CAACa,IAAd,CADnB,MADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,EAQE;AAAQ,IAAA,KAAK,EAAEf,IAAI,CAACc,UAApB;AAAgC,IAAA,QAAQ,EAAEV,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGH,KAAK,CAACe,GAAN,CAAUd,IAAI,IACb;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACO,EAApB;AAAwB,IAAA,GAAG,EAAEP,IAAI,CAACO,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACa,IADR,CADD,CAFH,CARF,CADF;AAmBD,CAjCD;;AAmCA,eAAehB,cAAf","sourcesContent":["import React from 'react';\n\nconst CardAssignment = ({\n  card = {},\n  users = [],\n  user = {},\n  assignCardToUser = () => {},\n}) => {\n  const handleChange = event => {\n    const userId = event.target.value;\n\n    if (assignCardToUser) assignCardToUser(card.id, userId);\n  };\n  console.log(this.props.card);\n  console.log(this.props.users);\n  console.log(this.props.user);\n  return (\n    <div className=\"CardAssignment\" style={{ fontSize: '0.8em' }}>\n      {card.assignedTo ? (\n        <p>\n          Card assigned to <strong>{user.name}</strong>.\n        </p>\n      ) : (\n        <p>Card unassigned.</p>\n      )}\n      <select value={card.assignedTo} onChange={handleChange}>\n        <option value=\"\">(Unassigned)</option>\n        {users.map(user => (\n          <option value={user.id} key={user.id}>\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CardAssignment;\n"]},"metadata":{},"sourceType":"module"}